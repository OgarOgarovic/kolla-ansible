{% set cloudkitty_log_dir = '/var/log/kolla/cloudkitty' %}
{% set binary_path = '/var/lib/kolla/venv/bin' %}

{% if cloudkitty_enable_tls_backend | bool %}
{% if kolla_base_distro in ['centos']  %}
LoadModule ssl_module /usr/lib64/httpd/modules/mod_ssl.so
{% else %}
LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
{% endif %}
{% endif %}

Listen {{ api_interface_address | put_address_in_context('url') }}:{{ cloudkitty_api_port }}

ServerSignature Off
ServerTokens Prod
TraceEnable off
TimeOut {{ kolla_httpd_timeout }}
KeepAliveTimeout {{ kolla_httpd_keep_alive }}

ErrorLog "{{ cloudkitty_log_dir }}/apache-error.log"
<IfModule log_config_module>
    CustomLog "{{ cloudkitty_log_dir }}/apache-access.log" common
</IfModule>

{% if cloudkitty_logging_debug | bool %}
LogLevel info
{% endif %}

<VirtualHost *:{{ cloudkitty_api_port }}>

  ErrorLog "{{ cloudkitty_log_dir }}/cloudkitty-api-error.log"
  LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b %D \"%{Referer}i\" \"%{User-Agent}i\"" logformat
  CustomLog "{{ cloudkitty_log_dir }}/cloudkitty-api-access.log" logformat
  WSGIApplicationGroup %{GLOBAL}
  WSGIDaemonProcess cloudkitty group=cloudkitty processes={{ cloudkitty_api_workers }} threads=1 user=cloudkitty
  WSGIProcessGroup cloudkitty
  WSGIScriptAlias / "{{ binary_path }}/cloudkitty-api"

  <Directory "{{ binary_path }}">
       <FilesMatch "^cloudkitty-api$">
            Require all granted
       </FilesMatch>
  </Directory>
{% if cloudkitty_enable_tls_backend | bool %}
  SSLEngine on
  SSLCertificateFile /etc/cloudkitty/certs/cloudkitty-cert.pem
  SSLCertificateKeyFile /etc/cloudkitty/certs/cloudkitty-key.pem
{% endif %}

</VirtualHost>
